---
title: "Plotting Distributions in R"
author: "Jason Bryer"
date: 2025-09-30
draft: false
description: "Function and Shiny application for working with distributions in R."
categories: ["R"]
image: "distributions_shiny_screenshot.png"
editor_options: 
  chunk_output_type: console
---

```{r banner, eval=FALSE, include=FALSE}
source('../resources/banner.R')
banner_image(rmarkdown::metadata$title,
			 date = format(as.Date(rmarkdown::metadata$date), "%B %d, %Y"),
			 out_file = paste0(rmarkdown::metadata$date), '-banner.png')
```

```{r setup, echo=FALSE, error=FALSE, message=FALSE, warning=FALSE, results='hide'}
```

When working with distributions in R, each distribution has four functions, namely:

* `dXXX` - density function.
* `rXXX` - generate random number from this distribution.
* `pXXX` - returns the area to the left of the given value.
* `qXXX` - returns the quantile for the given value/area.

Where `XXX` is the distribution name (e.g. `norm`, `binom`, `t`, etc.).

```{r, eval=FALSE}
remotes::install_github('jbryer/VisualStats')
```

The `VisualStats::plot_distributions()` function will generate four plots representing the four R 
distribution functions. For each subplot points correspond to the first parameter of the 
corresponding function (note the subplot for the random `rXXX` function does not have points
since this simply returns random values from that distribution). The arrows correspond to 
what that function will return.

```{r, message=FALSE, warning=FALSE}
library(VisualStats)
data('distributions', package = 'VisualStats')
plot_distributions(dist = 'norm',
				   xvals = c(-1, 0, 0.5),
				   xmin = -4,
				   xmax = 4)
```

The top two plots (`dXXX` and `rXXX`) plot the distribution. The bottom two plots are the
cumulative density function for the given distribution. The CDF describes the probability that a 
random variable (X) will be less than or equal to a specific value (`x`), written as 
F(x) = P(X â‰¤ x). The CDF provides a complete view of a random variable's distribution by 
accumulating probabilities up to that point.

```{r}
plot_distributions(dist = 'binom',
				   xvals = c(1, 3),
				   xmin = 0,
				   xmax = 10,
                   args = list(size = 10, prob = 0.35))
```

The `VisualStats` package also has a Shiny application that allows you to interactively plot the `r nrow(distributions)` distributions available in base R.

![Screenshot of the distributions Shiny application](distributions_shiny_screenshot.png)
